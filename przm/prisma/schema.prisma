generator client {
  provider               = "prisma-client"
  output                 = "../generated/prisma"
  previewFeatures        = ["driverAdapters", "queryCompiler"]
  generatedFileExtension = "ts"
  importFileExtension    = "ts"
  moduleFormat           = "esm"
  runtime                = "workerd"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum JobStatus {
  WAITING
  DISPATCHED
  EN_ROUTE
  ON_SCENE
  TOWING
  COMPLETED
  CANCELLED
}

enum JobPriority {
  LOW
  NORMAL
  HIGH
  URGENT
}

enum PaymentMethod {
  CREDIT_CARD
  CASH
  CHECK
}

enum PaymentStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
}

model User {
  id          String      @id @default(uuid())
  username    String      @unique
  firstName   String
  lastName    String
  towCompany  String?
  createdAt   DateTime    @default(now())
  credentials Credential?
  towJobs     TowJob[]
}

model Credential {
  id           String   @id @default(uuid())
  userId       String   @unique
  createdAt    DateTime @default(now())
  credentialId String   @unique
  publicKey    Bytes
  counter      Int      @default(0)
  user         User     @relation(fields: [userId], references: [id])

  @@index([credentialId])
  @@index([userId])
}

model TowJob {
  id                     String    @id @default(uuid())
  jobNumber              String?   @default(cuid())
  towerId                String
  customerName           String
  customerPhone          String
  vehicleMake            String
  vehicleModel           String
  vehicleYear            Int?
  vehicleColor           String?
  licensePlate           String?
  vin                    String?
  vehiclePhotoUrl        String?
  keysAvailable          Boolean?
  pickupLocation         String
  pickupLatitude         Float?
  pickupLongitude        Float?
  dropoffLocation        String?
  dropoffLatitude        Float?
  dropoffLongitude       Float?
  distance               String?
  estimatedTime          String?
  status                 JobStatus @default(WAITING)
  priority               JobPriority @default(NORMAL)
  description            String?
  estimatedCost          Float?
  actualCost             Float?
  driverName             String?
  truckName              String?
  paymentMethod          PaymentMethod?
  paymentStatus          PaymentStatus? @default(PENDING)
  paymentAmount          Float?
  paymentTransactionId   String?
  customerSignatureUrl   String?
  impoundLotSignatureUrl String?
  dropoffNotes           String?
  createdAt              DateTime  @default(now())
  updatedAt              DateTime  @updatedAt
  scheduledAt            DateTime?
  completedAt            DateTime?
  dropoffCompletedAt     DateTime?
  paymentCompletedAt     DateTime?
  tower                  User      @relation(fields: [towerId], references: [id])

  @@index([towerId])
  @@index([status])
  @@index([priority])
  @@index([createdAt])
  @@index([jobNumber])
  @@index([paymentStatus])
}
